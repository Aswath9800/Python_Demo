name: Python Test Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  read-config:
    runs-on: ubuntu-latest
    outputs:
      createTestData: ${{ steps.read.outputs.createTestData }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install pyyaml
      - id: read
        run: |
          CREATE_TEST_DATA=$(python -c "import yaml; print(yaml.safe_load(open('config.yaml'))['createTestData'])")
          echo "createTestData=$CREATE_TEST_DATA" >> $GITHUB_OUTPUT

  test-data-creation:
    needs: read-config
    if: needs.read-config.outputs.createTestData == 'True'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - run: python test_data_creator.py

  test-execution:
    needs: [read-config, test-data-creation]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - run: pytest test_main.py

  data-reconciliation:
    needs: test-execution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: python reconciliation.py

  reporting:
    needs: data-reconciliation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: python reporter.py
